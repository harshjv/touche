/*
 *  TFCIGrayscalingFilter.cikernel
 *
 *  Created by Georg Kaindl on 17/06/08.
 *
 *  Copyright (C) 2008 Georg Kaindl
 *
 *  This file is part of Touché.
 *
 *  Touché is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of
 *  the License, or (at your option) any later version.
 *
 *  Touché is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with Touché. If not, see <http: *www.gnu.org/licenses/>.
 *
 */
 
kernel vec4 grayscalingFromMinComponent(sampler Image)
{
	vec4 pix = sample(Image, samplerCoord(Image));
	float m = min(min(pix.r, pix.g), pix.b);
	
	return vec4(m, m, m, pix.a);
}

kernel vec4 grayscalingFromComponentProduct(sampler Image)
{
	vec4 pix = sample(Image, samplerCoord(Image));
	float m = pix.r * pix.g * pix.b;
	
	return vec4(m, m, m, pix.a);
}

kernel vec4 grayscalingFromComponentProductSquared(sampler Image)
{
	vec4 pix = sample(Image, samplerCoord(Image));
	float m = pix.r * pix.g * pix.b;
	m = m*m;
	
	return vec4(m, m, m, pix.a);
}